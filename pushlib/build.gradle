apply plugin: 'com.android.library'
apply plugin: "maven"

android {
    compileSdkVersion 26



    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //PushSDK必须依赖基础组件库，所以需要加入对应依赖
    implementation 'com.umeng.umsdk:common:1.5.4'
    //PushSDK必须依赖utdid库，所以需要加入对应依赖
    implementation 'com.umeng.umsdk:utdid:1.1.5.3'
    //PushSDK
    implementation 'com.umeng.umsdk:push:5.0.2'
    //小米Push通道
    implementation 'com.umeng.umsdk:xiaomi-push:3.6.9'
    implementation 'com.umeng.umsdk:xiaomi-umengaccs:1.0.9'
    //华为Push通道
    implementation 'com.umeng.umsdk:huawei-basetb:2.6.0.301'
    implementation 'com.umeng.umsdk:huawei-pushtb:2.6.0.301'
    implementation 'com.umeng.umsdk:huawei-umengaccs:1.1.3'
    //魅族Push通道
    implementation 'com.umeng.umsdk:meizu-push:3.8.1'
    implementation 'com.umeng.umsdk:meizu-umengaccs:1.0.6'
}
////在本地生成aar,然后手动push到githup的远程仓库
//uploadArchives{
//    repositories{
//        mavenDeployer{
//            repository(url:uri('C:/Users/Mark/Desktop/maven-snapshots'))
//            pom.groupId = 'com.mark' // 组名
//            pom.artifactId = 'markpush-lib' // 插件名
//            pom.version = '1.0.0' // 版本号
//        }
//    }
//}

apply from: rootProject.file('gradle/jcenter-push.gradle')
